---
operationId: post_metadata_cascade_policies_id_apply

summary: Force-apply metadata cascade policy to folder

tags:
  - Metadata cascade policies

x-box-tag: metadata_cascade_policies
x-box-sanitized: true

description: |-
  Force the metadata on a folder with a metadata cascade policy to be applied to
  all of its children. This can be used after creating a new cascade policy to
  enforce the metadata to be cascaded down to all existing files within that
  folder.

parameters:
  - name: metadata_cascade_policy_id
    required: true
    in: path
    schema:
      type: string
    description: The ID of the cascade policy to force-apply.
    example: 6fd4ff89-8fc1-42cf-8b29-1890dedd26d7

requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - conflict_resolution
        properties:
          conflict_resolution:
            type: string
            enum:
              - none
              - overwrite
            description: |-
              Describes the desired behavior when dealing with the conflict
              where a metadata template already has an instance applied
              to a child.

              * `none` will preserve the existing value on the file
              * `overwrite` will force-apply the templates values over
                any existing values.
            example: "none"

responses:
  202:
    description: |-
      Returns an empty response when the API call was successful. The metadata
      cascade operation will be performed asynchronously.

      The API call will return directly, before the cascade operation
      is complete. There is currently no API to check for the status of this
      operation.

  404:
    description: |-
      Returns an error when the policy can not be found or the user does not
      have access to the folder.

      * `instance_not_found` - The policy could not be found
      * `not_found` - The folder could not be found or the user does not have
        access to the folder.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'

  default:
    description: |-
      An unexpected client error.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'
