---
operationId: get_search

summary: Search for content

tags:
  - Search

x-box-tag: search
x-box-enable-explorer: true

description: |-
  Searches for items that are available to the user or an entire enterprise.

parameters:
  - name: query
    description: |-
      The string to search for. This query is matched against item names,
      descriptions, text content of files, and various other fields of
      the different item types.
    in: query
    required: true
    example: sales
    schema:
      type: string

  - name: scope
    description: |-
      Limits search results to a user scope.

      Defaults to `user_content` which limits the search to content
      available to the current user

      Setting this to `enterprise_content` widens the search to content
      available to the entire enterprise. To enable this scope for an
      administrator, please reach out to support.
    in: query
    required: false
    schema:
      type: string
      enum:
        - user_content
        - enterprise_content
    example: user_content

  - name: file_extensions
    description: |-
      Limits search results to a comma-separated list of
      file extensions.
    example: pdf,png,gif
    in: query
    required: false
    schema:
      type: string

  - name: created_at_range
    description: |-
      Limits search results to items created within
      a given date range.

      Date ranges are defined as comma separated RFC3339
      timestamps.

      If the the start date is omitted (`,2014-05-17T13:35:01-07:00`)
      the earliest known date will be used as the start date instead.

      If the end date is omitted (`2014-05-15T13:35:01-07:00,`) the
      current date will be used as the end date instead.
    example: "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
    in: query
    required: false
    schema:
      type: string

  - name: updated_at_range
    description: |-
      Limits search results to items updated within
      a given date range.

      Date ranges are defined as comma separated RFC3339
      timestamps.

      If the start date is omitted (`,2014-05-17T13:35:01-07:00`)
      the earliest known date will be used as the start date instead.

      If the end date is omitted (`2014-05-15T13:35:01-07:00,`) the
      current date will be used as the end date instead.
    example: "2014-05-15T13:35:01-07:00,2014-05-17T13:35:01-07:00"
    in: query
    required: false
    schema:
      type: string

  - name: size_range
    description: |-
      Limits search results to items within a given file size
      range.

      File size ranges are defined as comma separated byte sizes.

      The upper and lower bound can be omitted to create open ranges.
    example: "1000000,5000000"
    in: query
    required: false
    schema:
      type: string

  - name: owner_user_ids
    description: |-
      Limits search results to items owned
      by the given list of owners.

      Owners are defined as a comma separated list of user IDs.
    example: "123422,23532,3241212"
    in: query
    required: false
    schema:
      type: string

  - name: ancestor_folder_ids
    description: |-
      Limits search results to items within the given
      list of folders.

      Folders are defined as a comma separated lists
      of folder IDs.

      Search results will also include items within subfolders.
    example: "4535234,234123235,2654345"
    in: query
    required: false
    schema:
      type: string

  - name: content_types
    description: |-
      Limits search results to items with the given
      content types.

      Content types are defined as a comma separated lists
      of Box recognized content types.
    in: query
    example:
      - name
      - description
    required: false
    schema:
      type: array
      items:
        type: string
        enum:
          - name
          - description
          - file_content
          - comments
          - tag

  - name: type
    description: |-
      Limits search results to items of this type.
    example: file
    in: query
    required: false
    schema:
      type: string
      enum:
        - file
        - folder
        - web_link

  - name: trash_content
    description: |-
      Controls if search results include the trash.

      Defaults to `non_trashed_only`
    in: query
    required: false
    example: non_trashed_only
    schema:
      type: string
      enum:
        - non_trashed_only
        - trashed_only

  - name: mdfilters
    description: |-
      Limits search results to items that match the
      metadata template name and content.
    in: query
    required: false
    example:
      - scope: enterprise
        templateKey: marketingCollateral
        filters:
          documentType: datasheet
    schema:
      type: array
      items:
        type: object

        description: |-
          A metadata filter used for searching by metadata
          template

        properties:
          scope:
            description: |-
              Specifies the scope of the template to search for.
            type: string
            example: global
            enum:
              - global
              - enterprise

          templateKey:
            description: |-
              The key name of the template to search for. Only
              one template name can be specified per filter.
            type: string
            example: marketingCollateral

          filters:
            type: object
            description: |-
              Additional key/value pairs for the template to search for.

              For floats and dates, you can include an (inclusive) upper
              bound parameter `lt` or (inclusive) lower bound parameter
              `gt`, or both.

              An example filter for a `contractExpiration` on or before
              `08-01-16 UTC` would be listed as follow.

              `{"contractExpiration":{"lt":"2016-08-01T00:00:00Z"}}`
            example:
              documentType: datasheet
            additionalProperties:
              description: The value for the custom field
              type: string
              example: "datasheet"
              x-box-example-key: documentType

  - name: sort
    description: |-
      Defines the order in which results are returned. Defaults to `relevance`.

      * `relevance` (default) returns the results sorted by relevance to the
      query search term.
      * `modified_at` returns the results ordered in descending order by date
      at which the item was last modified.
    in: query
    required: false
    schema:
      type: string
      default: relevance
      enum:
        - modified_at
        - relevance
    example: modified_at

  - name: direction
    description: |-
      Defines the direction in which search results are ordered. Default value
      is `DESC`.

      When results are sorted by `relevance` the ordering is forced to `DESC`,
      ignoring the value of this parameter.
    in: query
    required: false
    schema:
      type: string
      default: DESC
      enum:
        - DESC
        - ASC
    example: ASC

  - name: limit
    description: |-
      The maximum number of items to return.
    in: query
    required: false
    example: 100
    schema:
      type: integer
      format: int64
      default: 30
      maximum: 200

  - $ref: '../attributes/fields.yml'
  - $ref: '../attributes/offset.yml'

responses:
  200:
    description: |-
      Returns a collection of search results. If there are no matching
      search results, the `entries` array will be empty.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/SearchResults'

  default:
    description: |-
      An unexpected client error.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/ClientError'
