---
tags:
  - Webhooks
operationId: get_webhooks
summary: Get Webhooks
description: |-
  Returns all defined webhooks for the requesting application and user, up to
  the limit. If no limit is supplied then Box uses the default limit of 100.

  If more than limit webhooks are defined then Box returns the webhooks in
  batches. When the results are batched, Box sends limit webhooks along with a
  next_marker field in the response object. The value of the next_marker field
  is a marker string that you can use in later requests to tell Box which batch
  to send next.

  When you send a request that includes a marker string, Box sends the next
  batch of webhooks, beginning after the last webhook of the previous batch.
  When the response contains the last of the defined webhooks, Box omits the
  next_marker field from its response.

  You can use limit and marker together with the marker string returned in the
  next_marker field to paginate lists of webhooks.
parameters:
  - name: limit
    description: The maximum number of webhooks to return per page
    in: query
    required: false
    schema:
      type: integer
      format: int64
  - name: marker
    description: |-
      A marker string returned by Box if the result contains less than the full
      number of webhooks that are defined
    in: query
    required: false
    schema:
      type: string
responses:
  '200':
    description: A collection of webhooks.
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/WebhookList'
        examples:
          response:
            value:
              entries:
                - id: '4161'
                  type: webhook
                  target:
                    id: '5018326685'
                    type: folder
                - id: '4165'
                  type: webhook
                  target:
                    id: '5016243669'
                    type: file
              limit: 3
  '403':
    description: Insufficient permissions
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Error'
  default:
    description: Create webhook error
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/Error'
