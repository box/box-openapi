{
  "openapi": "3.0.2",
  "info": {
    "title": "Box Platform API",
    "description": "[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.",
    "termsOfService": "https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9",
    "contact": {
      "name": "Box, Inc",
      "url": "https://box.dev",
      "email": "devrel@box.com"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2025.0",
    "x-box-commit-hash": "831cbf66ff"
  },
  "servers": [
    {
      "url": "https://api.box.com/2.0",
      "description": "Box Platform API server."
    }
  ],
  "paths": {
    "/docgen_templates": {
      "post": {
        "operationId": "post_docgen_templates_v2025.0",
        "summary": "Create Box Doc Gen template",
        "description": "Marks a file as a Box Doc Gen template.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "description": "Marks the provided file as a Box Doc Gen template.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocGenTemplateCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The file which has now been marked as a Box Doc Gen template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenTemplate--Base"
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to an apparent client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen_template",
        "tags": [
          "Box Doc Gen templates"
        ]
      },
      "get": {
        "operationId": "get_docgen_templates_v2025.0",
        "summary": "List Box Doc Gen templates",
        "description": "Lists Box Doc Gen templates on which the user is a collaborator.",
        "parameters": [
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of templates.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenTemplates"
                }
              }
            }
          },
          "400": {
            "description": "Returned if the user has passed in a malformed marker or limit value.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen_template",
        "tags": [
          "Box Doc Gen templates"
        ]
      }
    },
    "/docgen_templates/{template_id}": {
      "delete": {
        "operationId": "delete_docgen_templates_id_v2025.0",
        "summary": "Delete Box Doc Gen template",
        "description": "Unmarks file as Box Doc Gen template.",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "description": "ID of the file which will no longer be marked as a Box Doc Gen template.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "123"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when a file is no longer marked as a Box Doc Gen template."
          },
          "400": {
            "description": "The server cannot or will not process the request due to an apparent client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the template is not found or the user does not\nhave access to the associated template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen_template",
        "tags": [
          "Box Doc Gen templates"
        ]
      },
      "get": {
        "operationId": "get_docgen_templates_id_v2025.0",
        "summary": "Get Box Doc Gen template by ID",
        "description": "Lists details of a specific Box Doc Gen template.",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "description": "The ID of a Box Doc Gen template.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 123
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenTemplate"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the template is not found or the user does not\nhave access to the associated template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen_template",
        "tags": [
          "Box Doc Gen templates"
        ]
      }
    },
    "/docgen_templates/{template_id}/tags": {
      "get": {
        "operationId": "get_docgen_templates_id_tags_v2025.0",
        "summary": "List all Box Doc Gen template tags in template",
        "description": "Lists all tags in a Box Doc Gen template.",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "description": "ID of template.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 123
          },
          {
            "name": "template_version_id",
            "in": "query",
            "description": "Id of template version.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": 123
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of document generation template tags.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenTags"
                }
              }
            }
          },
          "202": {
            "description": "Processing tags for the file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenTagsProcessingMessage"
                }
              }
            }
          },
          "400": {
            "description": "Returned if the user has passed in a malformed marker or limit value.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "The requested resource could not be found but may be available in the future.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen_template",
        "tags": [
          "Box Doc Gen templates"
        ]
      }
    },
    "/docgen_jobs/{job_id}": {
      "get": {
        "operationId": "get_docgen_jobs_id_v2025.0",
        "summary": "Get Box Doc Gen job by ID",
        "description": "Get details of the Box Doc Gen job.",
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "description": "Box Doc Gen job ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 123
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the Box Doc Gen job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenJob"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the job is not found or the user does not\nhave access to the associated job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen",
        "tags": [
          "Box Doc Gen"
        ]
      }
    },
    "/docgen_jobs": {
      "get": {
        "operationId": "get_docgen_jobs_v2025.0",
        "summary": "List all Box Doc Gen jobs",
        "description": "Lists all Box Doc Gen jobs for a user.",
        "parameters": [
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Box Doc Gen jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenJobs--Full"
                }
              }
            }
          },
          "400": {
            "description": "Returned if the user has passed in a malformed marker or limit value.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen",
        "tags": [
          "Box Doc Gen"
        ]
      }
    },
    "/docgen_template_jobs/{template_id}": {
      "get": {
        "operationId": "get_docgen_template_jobs_id_v2025.0",
        "summary": "Get list of all Box Doc Gen jobs for template",
        "description": "Lists the users jobs which use this template.",
        "parameters": [
          {
            "name": "template_id",
            "in": "path",
            "description": "Id of template to fetch jobs for.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 123
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "A single Box Doc Gen template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenJobs"
                }
              }
            }
          },
          "400": {
            "description": "Returned if the user has passed in a malformed marker or limit value.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the template is not found or the user does not\nhave access to the associated template.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen_template",
        "tags": [
          "Box Doc Gen templates"
        ]
      }
    },
    "/docgen_batch_jobs/{batch_id}": {
      "get": {
        "operationId": "get_docgen_batch_jobs_id_v2025.0",
        "summary": "Get Box Doc Gen jobs by batch ID",
        "description": "Lists Box Doc Gen jobs in a batch.",
        "parameters": [
          {
            "name": "batch_id",
            "in": "path",
            "description": "Box Doc Gen batch ID.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": 123
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of Box Doc Gen jobs in a Box Doc Gen batch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenJobs"
                }
              }
            }
          },
          "400": {
            "description": "Returned if the user has passed in a malformed marker or limit value.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the batch is not found or the user does not\nhave access to the associated batch.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen",
        "tags": [
          "Box Doc Gen"
        ]
      }
    },
    "/docgen_batches": {
      "post": {
        "operationId": "post_docgen_batches_v2025.0",
        "summary": "Generate document using Box Doc Gen template",
        "description": "Generates a document using a Box Doc Gen template.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocGenBatchCreateRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "The created Batch ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocGenBatch--Base"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content or resource requested.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected condition was encountered on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "docgen",
        "tags": [
          "Box Doc Gen"
        ]
      }
    },
    "/hubs": {
      "get": {
        "operationId": "get_hubs_v2025.0",
        "summary": "List all hubs",
        "description": "Retrieves all hubs for requesting user.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query string to search for hubs.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Box"
          },
          {
            "name": "scope",
            "in": "query",
            "description": "The scope of the hubs to retrieve. Possible values include `editable`,\n`view_only`, and `all`. Default is `all`.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "all"
            },
            "example": "all"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort results by. \nPossible values include `name`, `updated_at`,\n`last_accessed_at`, `view_count`, and `relevance`.\nDefault is `relevance`.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "relevance"
            },
            "example": "name"
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "example": "ASC"
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all hubs for the given user or enterprise.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hubs"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hubs",
        "tags": [
          "Hubs"
        ]
      },
      "post": {
        "operationId": "post_hubs_v2025.0",
        "summary": "Create hub",
        "description": "Creates a new Hub.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new Hub object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hub"
                }
              }
            }
          },
          "400": {
            "description": "Returned if any of the request parameters are not valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error when the user does not have the\nright permissions to create a Hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hubs",
        "tags": [
          "Hubs"
        ]
      }
    },
    "/enterprise_hubs": {
      "get": {
        "operationId": "get_enterprise_hubs_v2025.0",
        "summary": "List all hubs for requesting enterprise",
        "description": "Retrieves all hubs for a given enterprise.\n\nAdmins or Hub Co-admins of an enterprise\nwith GCM scope can make this call.",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The query string to search for hubs.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "Box"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The field to sort results by.\nPossible values include `name`, `updated_at`,\n`last_accessed_at`, `view_count`, and `relevance`.\nDefault is `relevance`.",
            "required": false,
            "schema": {
              "type": "string",
              "default": "relevance"
            },
            "example": "name"
          },
          {
            "name": "direction",
            "in": "query",
            "description": "The direction to sort results in. This can be either in alphabetical ascending\n(`ASC`) or descending (`DESC`) order.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            },
            "example": "ASC"
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all hubs for the given user or enterprise.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hubs"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hubs",
        "tags": [
          "Hubs"
        ]
      }
    },
    "/hubs/{hub_id}": {
      "get": {
        "operationId": "get_hubs_id_v2025.0",
        "summary": "Get hub information by ID",
        "description": "Retrieves details for a hub by its ID.",
        "parameters": [
          {
            "name": "hub_id",
            "in": "path",
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting this hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a hub object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hub"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the hub is not found, or the user does not\nhave access to the hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hubs",
        "tags": [
          "Hubs"
        ]
      },
      "put": {
        "operationId": "put_hubs_id_v2025.0",
        "summary": "Update hub information by ID",
        "description": "Updates a Hub. Can be used to change title, description, or Hub settings.",
        "parameters": [
          {
            "name": "hub_id",
            "in": "path",
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting this hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a Hub object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hub"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the Hub is not found, or the user does not\nhave access to the Hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hubs",
        "tags": [
          "Hubs"
        ]
      },
      "delete": {
        "operationId": "delete_hubs_id_v2025.0",
        "summary": "Delete hub",
        "description": "Deletes a single hub.",
        "parameters": [
          {
            "name": "hub_id",
            "in": "path",
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting this hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the hub was\nsuccessfully deleted."
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the hub is not found or has already been deleted, or the user\ndoes not have access to the hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hubs",
        "tags": [
          "Hubs"
        ]
      }
    },
    "/hubs/{hub_id}/copy": {
      "post": {
        "operationId": "post_hubs_id_copy_v2025.0",
        "summary": "Copy hub",
        "description": "Creates a copy of a Hub.\n\nThe original Hub will not be modified.",
        "parameters": [
          {
            "name": "hub_id",
            "in": "path",
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting this hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubCopyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new Hub object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hub"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error when the user does not have the\nright permissions to create a Hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hubs",
        "tags": [
          "Hubs"
        ]
      }
    },
    "/hub_collaborations": {
      "get": {
        "operationId": "get_hub_collaborations_v2025.0",
        "summary": "Get hub collaborations",
        "description": "Retrieves all collaborations for a hub.",
        "parameters": [
          {
            "name": "hub_id",
            "in": "query",
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting this hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the collaborations associated with the specified hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubCollaborations"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the hub is not found, or the user does not\nhave access to the hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hub_collaborations",
        "tags": [
          "Hub Collaborations"
        ]
      },
      "post": {
        "operationId": "post_hub_collaborations_v2025.0",
        "summary": "Create hub collaboration",
        "description": "Adds a collaboration for a single user or a single group to a hub.\n\nCollaborations can be created using email address, user IDs, or group IDs.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubCollaborationCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new hub collaboration object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubCollaboration"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error when the user does not have the\nright permissions to create the collaboration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hub_collaborations",
        "tags": [
          "Hub Collaborations"
        ]
      }
    },
    "/hub_collaborations/{hub_collaboration_id}": {
      "get": {
        "operationId": "get_hub_collaborations_id_v2025.0",
        "summary": "Get hub collaboration by collaboration ID",
        "description": "Retrieves details for a hub collaboration by collaboration ID.",
        "parameters": [
          {
            "name": "hub_collaboration_id",
            "in": "path",
            "description": "The ID of the hub collaboration.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a hub collaboration object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubCollaboration"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the hub is not found, or the user does not\nhave access to the hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hub_collaborations",
        "tags": [
          "Hub Collaborations"
        ]
      },
      "put": {
        "operationId": "put_hub_collaborations_id_v2025.0",
        "summary": "Update hub collaboration",
        "description": "Updates a hub collaboration.\nCan be used to change the hub role.",
        "parameters": [
          {
            "name": "hub_collaboration_id",
            "in": "path",
            "description": "The ID of the hub collaboration.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubCollaborationUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an updated hub collaboration object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubCollaboration"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error if the authenticated user does not have the right\npermissions to update the collaboration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hub_collaborations",
        "tags": [
          "Hub Collaborations"
        ]
      },
      "delete": {
        "operationId": "delete_hub_collaborations_id_v2025.0",
        "summary": "Remove hub collaboration",
        "description": "Deletes a single hub collaboration.",
        "parameters": [
          {
            "name": "hub_collaboration_id",
            "in": "path",
            "description": "The ID of the hub collaboration.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1234"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "204": {
            "description": "A blank response is returned if the hub collaboration was\nsuccessfully deleted."
          },
          "404": {
            "description": "Returns an error if the hub collaboration could not be found,\nor the authenticated user does not have access to the hub collaboration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hub_collaborations",
        "tags": [
          "Hub Collaborations"
        ]
      }
    },
    "/hub_items": {
      "get": {
        "operationId": "get_hub_items_v2025.0",
        "summary": "Get hub items",
        "description": "Retrieves all items associated with a Hub.",
        "parameters": [
          {
            "name": "hub_id",
            "in": "query",
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting this hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.\n\nThis requires `usemarker` to be set to `true`.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves the items associated with the specified Hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubItems"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the Hub is not found, or the user does not\nhave access to the Hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hub_items",
        "tags": [
          "Hub Items"
        ]
      }
    },
    "/hubs/{hub_id}/manage_items": {
      "post": {
        "operationId": "post_hubs_id_manage_items_v2025.0",
        "summary": "Manage hub items",
        "description": "Adds and/or removes Hub items from a Hub.",
        "parameters": [
          {
            "name": "hub_id",
            "in": "path",
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting this hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          },
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HubItemsManageRequest"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Retrieves the status of all the operations.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HubItemsManageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returned if the Hub is not found, or the user does not\nhave access to the Hub.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "hub_items",
        "tags": [
          "Hub Items"
        ]
      }
    },
    "/shield_lists": {
      "get": {
        "operationId": "get_shield_lists_v2025.0",
        "summary": "Get all shield lists in enterprise",
        "description": "Retrieves all shield lists in the enterprise.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the list of shield list objects.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShieldLists"
                }
              }
            }
          }
        },
        "x-box-tag": "shield_lists",
        "tags": [
          "Shield lists"
        ]
      },
      "post": {
        "operationId": "post_shield_lists_v2025.0",
        "summary": "Create shield list",
        "description": "Creates a shield list.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShieldListsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the shield list object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShieldList"
                }
              }
            }
          },
          "409": {
            "description": "The shield list with this name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "shield_lists",
        "tags": [
          "Shield lists"
        ]
      }
    },
    "/shield_lists/{shield_list_id}": {
      "get": {
        "operationId": "get_shield_lists_id_v2025.0",
        "summary": "Get single shield list by shield list id",
        "description": "Retrieves a single shield list by its ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          },
          {
            "name": "shield_list_id",
            "in": "path",
            "description": "The unique identifier that represents a shield list.\nThe ID for any Shield List can be determined by the response from the endpoint\nfetching all shield lists for the enterprise.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "90fb0e17-c332-40ed-b4f9-fa8908fbbb24 "
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the shield list object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShieldList"
                }
              }
            }
          },
          "404": {
            "description": "The shield list was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "shield_lists",
        "tags": [
          "Shield lists"
        ]
      },
      "delete": {
        "operationId": "delete_shield_lists_id_v2025.0",
        "summary": "Delete single shield list by shield list id",
        "description": "Delete a single shield list by its ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          },
          {
            "name": "shield_list_id",
            "in": "path",
            "description": "The unique identifier that represents a shield list.\nThe ID for any Shield List can be determined by the response from the endpoint\nfetching all shield lists for the enterprise.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "90fb0e17-c332-40ed-b4f9-fa8908fbbb24 "
          }
        ],
        "responses": {
          "204": {
            "description": "Shield List correctly removed. No content in response."
          },
          "400": {
            "description": "The shield list is assigned to some rules and cannot be removed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "The shield list was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "shield_lists",
        "tags": [
          "Shield lists"
        ]
      },
      "put": {
        "operationId": "put_shield_lists_id_v2025.0",
        "summary": "Update shield list",
        "description": "Updates a shield list.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          },
          {
            "name": "shield_list_id",
            "in": "path",
            "description": "The unique identifier that represents a shield list.\nThe ID for any Shield List can be determined by the response from the endpoint\nfetching all shield lists for the enterprise.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "90fb0e17-c332-40ed-b4f9-fa8908fbbb24 "
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ShieldListsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the shield list object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShieldList"
                }
              }
            }
          },
          "404": {
            "description": "The shield list was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "409": {
            "description": "The shield list with this name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "shield_lists",
        "tags": [
          "Shield lists"
        ]
      }
    },
    "/archives": {
      "get": {
        "operationId": "get_archives_v2025.0",
        "summary": "List archives",
        "description": "Retrieves archives for an enterprise.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "maximum": 1000
            },
            "example": 1000
          },
          {
            "name": "marker",
            "in": "query",
            "description": "Defines the position marker at which to begin returning results. This is\nused when paginating using marker-based pagination.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of archives in the enterprise.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Archives"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error if the authenticated user does not have the right\npermissions to list archives.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "archives",
        "tags": [
          "Archives"
        ]
      },
      "post": {
        "operationId": "post_archives_v2025.0",
        "summary": "Create archive",
        "description": "Creates an archive.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the archive.",
                    "type": "string",
                    "example": "Some Archive"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a new archive object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Archive"
                }
              }
            }
          },
          "400": {
            "description": "Returns an error if some of the parameters are missing or\nnot valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error if the authenticated user does not have the right\npermissions to create an archive.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "409": {
            "description": "Returns an error if an archive with the given name already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "archives",
        "tags": [
          "Archives"
        ]
      }
    },
    "/archives/{archive_id}": {
      "delete": {
        "operationId": "delete_archives_id_v2025.0",
        "summary": "Delete archive",
        "description": "Permanently deletes an archive.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          },
          {
            "name": "archive_id",
            "in": "path",
            "description": "The ID of the archive.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "982312"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the archive has been deleted."
          },
          "400": {
            "description": "Returns an error if the archive is not empty.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "403": {
            "description": "Returns an error if the user does not have the right\npermissions to delete the archive.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the archive is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "archives",
        "tags": [
          "Archives"
        ]
      }
    },
    "/external_users/submit_delete_job": {
      "post": {
        "operationId": "post_external_users_submit_delete_job_v2025.0",
        "summary": "Submit job to delete external users",
        "description": "Delete external users from current user enterprise. This will remove each\nexternal user from all invited collaborations within the current enterprise.",
        "parameters": [
          {
            "$ref": "#/components/parameters/BoxVersionHeader"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalUsersSubmitDeleteJobRequest"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status response containing the result for each external user deletion request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExternalUsersSubmitDeleteJobResponse"
                }
              }
            }
          },
          "404": {
            "description": "Returns an error if the listed external users are not found, or the authenticated\nuser does not have the right permissions to delete external users.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientError"
                }
              }
            }
          }
        },
        "x-box-tag": "external_users",
        "tags": [
          "External Users"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "BoxVersionHeader": {
        "name": "box-version",
        "in": "header",
        "description": "Version header.",
        "allowEmptyValue": false,
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "2025.0"
          ]
        },
        "example": "2025.0"
      }
    },
    "schemas": {
      "Archive": {
        "description": "An archive is a folder dedicated to storing content that is\nredundant, outdated, or trivial. Content in an archive is not accessible to its\nowner and collaborators.\nTo use this feature, you must request GCM scope for your Box application.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier that represents an archive.",
            "type": "string",
            "example": "12345",
            "nullable": false
          },
          "type": {
            "description": "The value will always be `archive`.",
            "type": "string",
            "example": "archive",
            "enum": [
              "archive"
            ],
            "nullable": false
          },
          "name": {
            "description": "The name of the archive.\n\nThe following restrictions to the archive name apply: names containing\nnon-printable ASCII characters, forward and backward slashes\n(`/`, `\\`), names with trailing spaces, and names `.` and `..` are\nnot allowed.",
            "type": "string",
            "example": "Archive",
            "maxLength": 100,
            "minLength": 1,
            "nullable": false
          },
          "size": {
            "description": "The size of the archive in bytes.",
            "type": "integer",
            "format": "int64",
            "example": 123456789,
            "nullable": false
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "size"
        ],
        "title": "Archive",
        "x-box-resource-id": "archive_v2025.0",
        "x-box-tag": "archives"
      },
      "Archives": {
        "description": "A list of archives.",
        "type": "object",
        "allOf": [
          {
            "properties": {
              "entries": {
                "description": "A list in which each entry represents an archive object.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Archive"
                }
              }
            }
          },
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              }
            }
          }
        ],
        "title": "Archives",
        "x-box-resource-id": "archives_v2025.0",
        "x-box-tag": "archives"
      },
      "ClientError": {
        "description": "A generic error.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The value will always be `error`.",
            "type": "string",
            "example": "error",
            "enum": [
              "error"
            ],
            "nullable": false
          },
          "status": {
            "description": "The HTTP status of the response.",
            "type": "integer",
            "format": "int32",
            "example": 400,
            "nullable": false
          },
          "code": {
            "description": "A Box-specific error code.",
            "type": "string",
            "example": "item_name_invalid",
            "enum": [
              "created",
              "accepted",
              "no_content",
              "redirect",
              "not_modified",
              "bad_request",
              "unauthorized",
              "forbidden",
              "not_found",
              "method_not_allowed",
              "conflict",
              "precondition_failed",
              "too_many_requests",
              "internal_server_error",
              "unavailable",
              "item_name_invalid",
              "insufficient_scope"
            ]
          },
          "message": {
            "description": "A short message describing the error.",
            "type": "string",
            "example": "Method Not Allowed",
            "nullable": false
          },
          "context_info": {
            "description": "A free-form object that contains additional context\nabout the error. The possible fields are defined on\na per-endpoint basis. `message` is only one example.",
            "type": "object",
            "example": {
              "message": "Something went wrong"
            },
            "additionalProperties": {},
            "nullable": true
          },
          "help_url": {
            "description": "A URL that links to more information about why this error occurred.",
            "type": "string",
            "example": "https://developer.box.com/guides/api-calls/permissions-and-errors/common-errors/",
            "nullable": false
          },
          "request_id": {
            "description": "A unique identifier for this response, which can be used\nwhen contacting Box support.",
            "type": "string",
            "example": "abcdef123456",
            "nullable": false
          }
        },
        "title": "Client error",
        "x-box-resource-id": "client_error_v2025.0"
      },
      "DocGenBatch--Base": {
        "description": "The basic representation of a Box Doc Gen batch object. A Box Doc Gen batch contains one or more Box Doc Gen jobs.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier that represents a Box Doc Gen batch.",
            "type": "string",
            "example": "12345",
            "nullable": false
          },
          "type": {
            "description": "The value will always be `docgen_batch`.",
            "type": "string",
            "example": "docgen_batch",
            "enum": [
              "docgen_batch"
            ],
            "nullable": false
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Box Doc Gen batch (Base)",
        "x-box-resource-id": "docgen_batch_v2025.0--base",
        "x-box-tag": "docgen",
        "x-box-variant": "base",
        "x-box-variants": [
          "base"
        ]
      },
      "DocGenBatchCreateRequest": {
        "description": "The schema for creating a Box Doc Gen job batch request.",
        "type": "object",
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileReference"
              },
              {
                "description": "A Box Doc Gen template that is used to generate the document."
              }
            ]
          },
          "file_version": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileVersion--Base"
              },
              {
                "description": "File version of a template."
              }
            ]
          },
          "input_source": {
            "description": "Source of input. The value has to be `api` for all the API-based document generation requests.",
            "type": "string",
            "example": "api"
          },
          "destination_folder": {
            "allOf": [
              {
                "title": "Folder reference",
                "type": "object",
                "description": "Folder reference.",
                "required": [
                  "type",
                  "id"
                ],
                "properties": {
                  "type": {
                    "description": "The value will always be `folder`.",
                    "type": "string",
                    "example": "folder",
                    "enum": [
                      "folder"
                    ],
                    "nullable": false
                  },
                  "id": {
                    "description": "ID of the folder.",
                    "type": "string",
                    "example": "42037322"
                  }
                }
              },
              {
                "description": "Destination folder for the generated files."
              }
            ]
          },
          "output_type": {
            "description": "Type of the output file.",
            "type": "string",
            "example": "docx"
          },
          "document_generation_data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocGenDocumentGenerationData"
            }
          }
        },
        "required": [
          "file",
          "input_source",
          "destination_folder",
          "output_type",
          "document_generation_data"
        ],
        "title": "Create batch request"
      },
      "DocGenDocumentGenerationData": {
        "description": "The schema for for creating a Box Doc Gen job request.",
        "type": "object",
        "properties": {
          "generated_file_name": {
            "description": "File name of the output file.",
            "type": "string",
            "example": "New_Template"
          },
          "user_input": {
            "type": "object",
            "example": {
              "name": "Aaron Levie"
            },
            "additionalProperties": {}
          }
        },
        "required": [
          "generated_file_name",
          "user_input"
        ],
        "title": "Document generation data"
      },
      "DocGenJob": {
        "description": "A standard representation of a Box Doc Gen job.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DocGenJob--Base"
          },
          {
            "properties": {
              "batch": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DocGenBatch--Base"
                  },
                  {
                    "description": "Box Doc Gen batch that the job belongs to."
                  }
                ]
              },
              "template_file": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileReference"
                  },
                  {
                    "description": "Box Doc Gen template used in the job."
                  }
                ]
              },
              "template_file_version": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FileVersion--Base"
                  },
                  {
                    "description": "File version of a template."
                  }
                ]
              },
              "output_file": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/FileReference"
                      },
                      {
                        "title": "OpenAPI 3.0 null schema type",
                        "description": "The definition for a null schema type in OpenAPI `3.0`.",
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": false
                      }
                    ]
                  },
                  {
                    "description": "The output file of the job. This property is `null` until the job is completed."
                  }
                ]
              },
              "output_file_version": {
                "allOf": [
                  {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/FileVersion--Base"
                      },
                      {
                        "title": "OpenAPI 3.0 null schema type",
                        "description": "The definition for a null schema type in OpenAPI `3.0`.",
                        "type": "object",
                        "nullable": true,
                        "additionalProperties": false
                      }
                    ]
                  },
                  {
                    "description": "File version of the output file. This property is `null` until the job is completed."
                  }
                ]
              },
              "status": {
                "description": "Status of the job.",
                "type": "string",
                "example": "completed",
                "enum": [
                  "submitted",
                  "completed",
                  "failed",
                  "completed_with_error",
                  "pending"
                ]
              },
              "output_type": {
                "description": "Type of the generated file.",
                "type": "string",
                "example": "docx"
              }
            }
          }
        ],
        "required": [
          "id",
          "batch",
          "template_file",
          "template_file_version",
          "status",
          "output_type"
        ],
        "title": "Box Doc Gen job",
        "x-box-resource-id": "docgen_job_v2025.0",
        "x-box-tag": "docgen",
        "x-box-variant": "standard",
        "x-box-variants": [
          "base",
          "standard",
          "full"
        ]
      },
      "DocGenJob--Base": {
        "description": "The basic representation of a Box Doc Gen job.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier that represent a Box Doc Gen job.",
            "type": "string",
            "example": "12345",
            "nullable": false
          },
          "type": {
            "description": "The value will always be `docgen_job`.",
            "type": "string",
            "example": "docgen_job",
            "enum": [
              "docgen_job"
            ],
            "nullable": false
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Box Doc Gen job (Base)",
        "x-box-resource-id": "docgen_job_v2025.0--base",
        "x-box-tag": "docgen",
        "x-box-variant": "base",
        "x-box-variants": [
          "base",
          "standard",
          "full"
        ]
      },
      "DocGenJob--Full": {
        "description": "A full representation of a Box Doc Gen job.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DocGenJob"
          },
          {
            "properties": {
              "created_at": {
                "description": "Time of job creation.",
                "type": "string",
                "example": "2022-05-11T10:56:11-07:00",
                "readOnly": true
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Base"
                  },
                  {
                    "description": "User who created the job."
                  }
                ]
              },
              "enterprise": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EnterpriseReference"
                  },
                  {
                    "description": "ID of the enterprise."
                  }
                ]
              },
              "source": {
                "description": "Source of the request.",
                "type": "string",
                "example": "api",
                "readOnly": true
              }
            }
          }
        ],
        "required": [
          "id",
          "batch",
          "created_by",
          "enterprise",
          "template_file",
          "template_file_version",
          "output_type",
          "source",
          "status"
        ],
        "title": "Box Doc Gen job (Full)",
        "x-box-resource-id": "docgen_job_v2025.0--full",
        "x-box-tag": "docgen",
        "x-box-variant": "full",
        "x-box-variants": [
          "base",
          "standard",
          "full"
        ]
      },
      "DocGenJobs": {
        "description": "A list of Box Doc Gen jobs with a standard set of parameters.",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              },
              "prev_marker": {
                "description": "The marker for the start of the previous page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVih",
                "nullable": true
              }
            }
          },
          {
            "properties": {
              "entries": {
                "description": "List of jobs.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocGenJob"
                }
              }
            }
          }
        ],
        "title": "Box Doc Gen jobs",
        "x-box-resource-id": "docgen_jobs_v2025.0",
        "x-box-tag": "docgen",
        "x-box-variant": "base",
        "x-box-variants": [
          "standard",
          "full"
        ]
      },
      "DocGenJobs--Full": {
        "description": "A list of Box Doc Gen jobs with a full set of parameters.",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              },
              "prev_marker": {
                "description": "The marker for the start of the previous page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVih",
                "nullable": true
              }
            }
          },
          {
            "properties": {
              "entries": {
                "description": "List of jobs.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocGenJob--Full"
                }
              }
            }
          }
        ],
        "title": "Box Doc Gen jobs (Full)",
        "x-box-resource-id": "docgen_jobs_v2025.0--full",
        "x-box-tag": "docgen",
        "x-box-variant": "full",
        "x-box-variants": [
          "standard",
          "full"
        ]
      },
      "DocGenTag": {
        "description": "A Box Doc Gen template tag object.",
        "type": "object",
        "properties": {
          "tag_content": {
            "description": "The content of the tag.",
            "type": "string",
            "example": "{{item.name}}",
            "readOnly": true
          },
          "tag_type": {
            "description": "Type of the tag.",
            "type": "string",
            "example": "text",
            "enum": [
              "text",
              "arithmetic",
              "conditional",
              "for-loop",
              "table-loop",
              "image"
            ],
            "readOnly": true
          },
          "json_paths": {
            "description": "List of the paths.",
            "type": "array",
            "items": {
              "readOnly": true,
              "type": "string",
              "example": "products.name"
            },
            "example": [
              "products",
              "products.name"
            ],
            "readOnly": true
          }
        },
        "required": [
          "tag_content",
          "tag_type",
          "json_paths"
        ],
        "title": "Box Doc Gen template tag",
        "x-box-resource-id": "docgen_tag_v2025.0",
        "x-box-sanitized": true,
        "x-box-tag": "docgen_template"
      },
      "DocGenTags": {
        "description": "A list of Box Doc Gen tags.",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              },
              "prev_marker": {
                "description": "The marker for the start of the previous page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVih",
                "nullable": true
              }
            }
          },
          {
            "properties": {
              "entries": {
                "description": "List of tags.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocGenTag"
                }
              }
            }
          }
        ],
        "title": "Box Doc Gen tags",
        "x-box-resource-id": "docgen_tags_v2025.0",
        "x-box-tag": "docgen_template"
      },
      "DocGenTagsProcessingMessage": {
        "description": "A message informing the user that document tags are still being processed.",
        "type": "object",
        "properties": {
          "message": {
            "description": "A message informing the user that document tags are still being processed.",
            "type": "string",
            "example": "Processing tags for this file.",
            "readOnly": true
          }
        },
        "required": [
          "message"
        ],
        "title": "Box Doc Gen tags processing message",
        "x-box-resource-id": "docgen_tags_processing_message_v2025.0",
        "x-box-tag": "docgen_template"
      },
      "DocGenTemplate": {
        "description": "A Box Doc Gen template object.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DocGenTemplate--Base"
          },
          {
            "properties": {
              "file_name": {
                "description": "The name of the template.",
                "type": "string",
                "example": "Official contract",
                "nullable": true
              }
            }
          }
        ],
        "title": "Box Doc Gen template",
        "x-box-resource-id": "docgen_template_v2025.0",
        "x-box-tag": "docgen_template",
        "x-box-variant": "standard",
        "x-box-variants": [
          "base",
          "standard"
        ]
      },
      "DocGenTemplate--Base": {
        "description": "A base representation of a Box Doc Gen template, used when\nnested within another resource.",
        "type": "object",
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileReference"
              },
              {
                "description": "Enable the file to generate a document from."
              }
            ]
          }
        },
        "title": "Box Doc Gen template (Base)",
        "x-box-resource-id": "docgen_template_v2025.0--base",
        "x-box-variant": "base",
        "x-box-variants": [
          "base",
          "standard"
        ]
      },
      "DocGenTemplateCreateRequest": {
        "description": "The schema for marking document as Box Doc Gen template.",
        "type": "object",
        "properties": {
          "file": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileReference"
              },
              {
                "description": "Marks the file as a Box Doc Gen template to generate the document from."
              }
            ]
          }
        },
        "required": [
          "file"
        ],
        "title": "Mark file as Box Doc Gen template"
      },
      "DocGenTemplates": {
        "description": "List of Box Doc Gen templates.",
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              },
              "prev_marker": {
                "description": "The marker for the start of the previous page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVih",
                "nullable": true
              }
            }
          },
          {
            "properties": {
              "entries": {
                "description": "A list of templates.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DocGenTemplate"
                }
              }
            }
          }
        ],
        "title": "Box Doc Gen templates",
        "x-box-resource-id": "docgen_templates_v2025.0",
        "x-box-tag": "docgen_template"
      },
      "EnterpriseReference": {
        "description": "A reference to an enterprise, used when\nnested within another resource.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for this enterprise.",
            "type": "string",
            "example": "1910967"
          },
          "type": {
            "description": "The value will always be `enterprise`.",
            "type": "string",
            "example": "enterprise",
            "enum": [
              "enterprise"
            ],
            "nullable": false
          }
        },
        "title": "Enterprise reference"
      },
      "ExternalUserDeletionResult": {
        "description": "Result of a single external user deletion request.",
        "type": "object",
        "properties": {
          "user_id": {
            "description": "The ID of the external user.",
            "type": "string",
            "example": "12345"
          },
          "status": {
            "description": "HTTP status code for a specific user's deletion request.",
            "type": "integer",
            "example": 202
          },
          "detail": {
            "description": "Deletion request status details.",
            "type": "string",
            "example": "Successfully submitted for deletion"
          }
        },
        "required": [
          "user_id",
          "status"
        ],
        "title": "External User Deletion Result"
      },
      "ExternalUsersSubmitDeleteJobRequest": {
        "description": "Request to submit a job to delete external users from the current enterprise.",
        "type": "object",
        "properties": {
          "external_users": {
            "description": "List of external users to delete.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserReference"
            }
          }
        },
        "required": [
          "external_users"
        ],
        "title": "External Users Submit Delete Job Request"
      },
      "ExternalUsersSubmitDeleteJobResponse": {
        "description": "Multi-status response containing the result for each external user deletion request.",
        "type": "object",
        "properties": {
          "entries": {
            "description": "Array of results of each external user deletion request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalUserDeletionResult"
            }
          }
        },
        "required": [
          "entries"
        ],
        "title": "External Users Submit Delete Job Response",
        "x-box-resource-id": "external_users_submit_delete_job_response_v2025.0",
        "x-box-tag": "external_users"
      },
      "FileReference": {
        "description": "File reference.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The value will always be `file`.",
            "type": "string",
            "example": "file",
            "enum": [
              "file"
            ],
            "nullable": false
          },
          "id": {
            "description": "ID of the object.",
            "type": "string",
            "example": "42037322",
            "nullable": false
          }
        },
        "required": [
          "type",
          "id"
        ],
        "title": "File reference"
      },
      "FileVersion--Base": {
        "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier that represent a file version.",
            "type": "string",
            "example": "12345",
            "nullable": false
          },
          "type": {
            "description": "The value will always be `file_version`.",
            "type": "string",
            "example": "file_version",
            "enum": [
              "file_version"
            ],
            "nullable": false
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "File version (Base)"
      },
      "FolderReference": {
        "description": "Folder reference.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The value will always be `folder`.",
            "type": "string",
            "example": "folder",
            "enum": [
              "folder"
            ],
            "nullable": false
          },
          "id": {
            "description": "ID of the folder.",
            "type": "string",
            "example": "42037322"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "title": "Folder reference"
      },
      "Group--Base": {
        "description": "A base representation of a group.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for this object.",
            "type": "string",
            "example": "11446498"
          },
          "type": {
            "description": "The value will always be `group`.",
            "type": "string",
            "example": "group",
            "enum": [
              "group"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Group (Base)"
      },
      "Group--Mini": {
        "description": "Mini representation of a group, including id and name of\ngroup.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Group--Base"
          },
          {
            "properties": {
              "name": {
                "description": "The name of the group.",
                "type": "string",
                "example": "Support"
              },
              "group_type": {
                "description": "The type of the group.",
                "type": "string",
                "example": "managed_group",
                "enum": [
                  "managed_group",
                  "all_users_group"
                ]
              }
            }
          }
        ],
        "title": "Group (Mini)"
      },
      "Hub": {
        "description": "A standard representation of a hub, as returned from any\nhubs API endpoints by default.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Hub--Base"
          },
          {
            "properties": {
              "title": {
                "description": "The title given to the hub.",
                "type": "string",
                "example": "Contracts"
              },
              "description": {
                "description": "The description of the hub. First 200 characters are returned.",
                "type": "string",
                "example": "All the contracts for the company."
              },
              "created_at": {
                "description": "The date and time when the folder was created. This value may\nbe `null` for some folders such as the root folder or the trash\nfolder.",
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43Z"
              },
              "updated_at": {
                "description": "The date and time when the hub was last updated.",
                "type": "string",
                "format": "date-time",
                "example": "2012-12-12T10:53:43Z"
              },
              "created_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who created this hub."
                  }
                ]
              },
              "updated_by": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/User--Mini"
                  },
                  {
                    "description": "The user who last modified this hub."
                  }
                ]
              },
              "view_count": {
                "description": "The number of views for the hub.",
                "type": "integer",
                "format": "int32",
                "example": 506
              },
              "is_ai_enabled": {
                "description": "Indicates if AI features are enabled for the hub.",
                "type": "boolean",
                "example": true
              },
              "is_collaboration_restricted_to_enterprise": {
                "description": "Indicates if collaboration is restricted to the enterprise.",
                "type": "boolean",
                "example": true
              },
              "can_non_owners_invite": {
                "description": "Indicates if non-owners can invite others to the hub.",
                "type": "boolean",
                "example": true
              },
              "can_shared_link_be_created": {
                "description": "Indicates if a shared link can be created for the hub.",
                "type": "boolean",
                "example": true
              }
            }
          }
        ],
        "title": "Hub",
        "x-box-resource-id": "hub_v2025.0",
        "x-box-variant": "standard"
      },
      "Hub--Base": {
        "description": "The bare basic representation of a hub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier that represent a hub.\n\nThe ID for any hub can be determined\nby visiting a hub in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/hubs/123`\nthe `hub_id` is `123`.",
            "type": "string",
            "example": "12345"
          },
          "type": {
            "description": "The value will always be `hubs`.",
            "type": "string",
            "example": "hubs",
            "enum": [
              "hubs"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Hub (Base)",
        "x-box-resource-id": "hub_v2025.0--base",
        "x-box-tag": "hubs",
        "x-box-variant": "base",
        "x-box-variants": [
          "base",
          "standard"
        ]
      },
      "HubAccessGrantee": {
        "description": "The user or group that is granted access.",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/HubCollaborationUser"
          },
          {
            "$ref": "#/components/schemas/Group--Mini"
          }
        ],
        "title": "Hub Accessible By"
      },
      "HubAction": {
        "description": "The action to perform on a Hub item.",
        "type": "string",
        "example": "add",
        "enum": [
          "add",
          "remove"
        ],
        "nullable": false,
        "title": "Hub Action"
      },
      "HubCollaboration": {
        "description": "A hub collaboration object grants a user or group access \nto a hub with permissions defined by a specific role.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for this collaboration.",
            "type": "string",
            "example": "12345678"
          },
          "type": {
            "description": "The value will always be `hub_collaboration`.",
            "type": "string",
            "example": "hub_collaboration",
            "enum": [
              "hub_collaboration"
            ]
          },
          "hub": {
            "$ref": "#/components/schemas/Hub--Base"
          },
          "accessible_by": {
            "$ref": "#/components/schemas/HubAccessGrantee"
          },
          "role": {
            "description": "The level of access granted to hub.\nPossible values are `editor`, `viewer`, and `co-owner`.",
            "type": "string",
            "example": "editor"
          },
          "status": {
            "description": "The status of the collaboration invitation. If the status\nis `pending`, `login` and `name` return an empty string.",
            "type": "string",
            "example": "accepted",
            "enum": [
              "accepted",
              "pending",
              "rejected"
            ]
          },
          "acceptance_requirements_status": {
            "type": "object",
            "properties": {
              "terms_of_service_requirement": {
                "type": "object",
                "properties": {
                  "is_accepted": {
                    "description": "Whether or not the terms of service have been accepted.  The\nfield is `null` when there is no terms of service required.",
                    "type": "boolean",
                    "example": true,
                    "nullable": true
                  },
                  "terms_of_service": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/TermsOfService--Base"
                      },
                      {
                        "description": "The terms of service that must be accepted before the\ncollaboration can be accepted. The field is `null` when\nthere is no terms of service required."
                      }
                    ]
                  }
                }
              },
              "strong_password_requirement": {
                "type": "object",
                "properties": {
                  "enterprise_has_strong_password_required_for_external_users": {
                    "description": "Whether or not the enterprise that owns the content requires\na strong password to collaborate on the content, or enforces\nan exposed password detection for the external collaborators.",
                    "type": "boolean",
                    "example": true
                  },
                  "user_has_strong_password": {
                    "description": "Whether or not the user has a strong and not exposed password set\nfor their account. The field is `null` when a strong password is\nnot required.",
                    "type": "boolean",
                    "example": true,
                    "nullable": true
                  }
                }
              },
              "two_factor_authentication_requirement": {
                "type": "object",
                "properties": {
                  "enterprise_has_two_factor_auth_enabled": {
                    "description": "Whether or not the enterprise that owns the content requires\ntwo-factor authentication to be enabled in order to\ncollaborate on the content.",
                    "type": "boolean",
                    "example": true
                  },
                  "user_has_two_factor_authentication_enabled": {
                    "description": "Whether or not the user has two-factor authentication\nenabled. The field is `null` when two-factor\nauthentication is not required.",
                    "type": "boolean",
                    "example": true,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Hub Collaboration",
        "x-box-resource-id": "hub_collaboration_v2025.0",
        "x-box-tag": "hub_collaborations"
      },
      "HubCollaborationCreateRequest": {
        "description": "Request body for creating a new Hub collaboration.",
        "type": "object",
        "properties": {
          "hub": {
            "description": "Hubs reference.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The value will always be `hubs`.",
                "type": "string",
                "example": "hubs",
                "enum": [
                  "hubs"
                ]
              },
              "id": {
                "description": "ID of the object.",
                "type": "string",
                "example": "42037322"
              }
            },
            "required": [
              "type",
              "id"
            ],
            "title": "Hubs reference"
          },
          "accessible_by": {
            "description": "The user or group who gets access to the item.",
            "type": "object",
            "properties": {
              "type": {
                "description": "The type of collaborator to invite.\nPossible values are `user` or `group`.",
                "type": "string",
                "example": "user"
              },
              "id": {
                "description": "The ID of the user or group.\n\nAlternatively, use `login` to specify a user by email\naddress.",
                "type": "string",
                "example": "23522323"
              },
              "login": {
                "description": "The email address of the user who gets access to the item.\n\nAlternatively, use `id` to specify a user by user ID.",
                "type": "string",
                "example": "john@example.com"
              }
            },
            "required": [
              "type"
            ]
          },
          "role": {
            "description": "The level of access granted to hub.\nPossible values are `editor`, `viewer`, and `co-owner`.",
            "type": "string",
            "example": "editor"
          }
        },
        "required": [
          "hub",
          "accessible_by",
          "role"
        ],
        "title": "Hub Collaboration Create Request"
      },
      "HubCollaborationUpdateRequest": {
        "description": "Request body for updating an existing Hub collaboration.",
        "type": "object",
        "properties": {
          "role": {
            "description": "The level of access granted to hub.\nPossible values are `editor`, `viewer`, and `co-owner`.",
            "type": "string",
            "example": "editor"
          }
        },
        "title": "Hub Collaboration Update Request"
      },
      "HubCollaborationUser": {
        "description": "A mini representation of a user, can be returned only when\nthe status is `pending`.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/User--Base"
          },
          {
            "properties": {
              "name": {
                "description": "The display name of this user. If the collaboration status is `pending`, an empty string is returned.",
                "type": "string",
                "example": "Aaron Levie",
                "maxLength": 50,
                "nullable": false
              },
              "login": {
                "description": "The primary email address of this user. If the collaboration status is `pending`, an empty string is returned.",
                "type": "string",
                "format": "email",
                "example": "ceo@example.com",
                "nullable": false
              }
            }
          }
        ],
        "title": "Hub Collaboration User"
      },
      "HubCollaborations": {
        "description": "A list of hub collaborations.",
        "type": "object",
        "allOf": [
          {
            "properties": {
              "entries": {
                "description": "A list of hub collaborations.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HubCollaboration"
                }
              }
            }
          },
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              }
            }
          }
        ],
        "title": "Hub Collaborations",
        "x-box-resource-id": "hub_collaborations_v2025.0",
        "x-box-tag": "hub_collaborations"
      },
      "HubCopyRequest": {
        "description": "Request schema for copying a Hub.",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of the Hub. It cannot be empty and should be less than 50 characters.",
            "type": "string",
            "example": "Hub Title",
            "maxLength": 50
          },
          "description": {
            "description": "Description of the Hub.",
            "type": "string",
            "example": "This is a description of the Hub."
          }
        },
        "title": "Hub Copy Request"
      },
      "HubCreateRequest": {
        "description": "Request schema for creating a new Hub.",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of the Hub. It cannot be empty and should be less than 50 characters.",
            "type": "string",
            "example": "Hub Title",
            "maxLength": 50
          },
          "description": {
            "description": "Description of the Hub.",
            "type": "string",
            "example": "This is a description of the Hub."
          }
        },
        "required": [
          "title"
        ],
        "title": "Hub Create Request"
      },
      "HubItem": {
        "description": "A Hub Item is a Box Item that is referenced in a Hub.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for this item.",
            "type": "string",
            "example": "12345678"
          },
          "type": {
            "description": "The type of the item.",
            "type": "string",
            "example": "file",
            "enum": [
              "file",
              "folder",
              "web_link"
            ]
          },
          "name": {
            "description": "The name of the item.",
            "type": "string",
            "example": "My File"
          }
        },
        "required": [
          "id",
          "type",
          "name"
        ],
        "title": "Hub Item",
        "x-box-resource-id": "hub_item_v2025.0",
        "x-box-tag": "hub_items"
      },
      "HubItemOperation": {
        "description": "An operation to perform on a Hub item.",
        "type": "object",
        "properties": {
          "action": {
            "description": "The action to perform on a Hub item.",
            "type": "string",
            "example": "add",
            "enum": [
              "add",
              "remove"
            ],
            "nullable": false,
            "title": "Hub Action"
          },
          "item": {
            "description": "Reference to an item that can be added to a Hub.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/FileReference"
              },
              {
                "$ref": "#/components/schemas/FolderReference"
              },
              {
                "$ref": "#/components/schemas/WeblinkReference"
              }
            ],
            "title": "Hub Item Reference"
          }
        },
        "required": [
          "action",
          "item"
        ],
        "title": "Hub Item Operation"
      },
      "HubItemOperationResult": {
        "description": "Result of a Hub item operation.",
        "type": "object",
        "properties": {
          "action": {
            "description": "The action performed on the item.",
            "type": "string",
            "example": "add"
          },
          "item": {
            "$ref": "#/components/schemas/HubItemReference"
          },
          "status": {
            "description": "The HTTP status code of the operation.",
            "type": "integer",
            "example": 200
          },
          "error": {
            "description": "Error message if the operation failed.",
            "type": "string",
            "example": "Item not found"
          }
        },
        "title": "Hub Item Operation Result"
      },
      "HubItemReference": {
        "description": "Reference to an item that can be added to a Hub.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/FileReference"
          },
          {
            "$ref": "#/components/schemas/FolderReference"
          },
          {
            "$ref": "#/components/schemas/WeblinkReference"
          }
        ],
        "title": "Hub Item Reference"
      },
      "HubItems": {
        "description": "A list of Hub items.",
        "type": "object",
        "allOf": [
          {
            "properties": {
              "entries": {
                "description": "A list of Hub items.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/HubItem"
                }
              }
            }
          },
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              }
            }
          }
        ],
        "title": "Hub Items",
        "x-box-resource-id": "hub_items_v2025.0",
        "x-box-tag": "hub_items"
      },
      "HubItemsManageRequest": {
        "description": "Request schema for managing Hub items.",
        "type": "object",
        "properties": {
          "operations": {
            "description": "List of operations to perform on Hub items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubItemOperation"
            }
          }
        },
        "title": "Hub Items Manage Request"
      },
      "HubItemsManageResponse": {
        "description": "Response schema for the status of Hub items management operations.",
        "type": "object",
        "properties": {
          "operations": {
            "description": "List of operations performed on Hub items.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HubItemOperationResult"
            }
          }
        },
        "required": [
          "operations"
        ],
        "title": "Hub Items Manage Response",
        "x-box-resource-id": "hub_items_manage_response_v2025.0",
        "x-box-tag": "hub_items"
      },
      "HubUpdateRequest": {
        "description": "Request schema for updating an existing Hub.",
        "type": "object",
        "properties": {
          "title": {
            "description": "Title of the Hub. It cannot be empty and should be less than 50 characters.",
            "type": "string",
            "example": "Hub Title",
            "maxLength": 50
          },
          "description": {
            "description": "Description of the Hub.",
            "type": "string",
            "example": "This is a description of the Hub."
          },
          "is_ai_enabled": {
            "description": "Indicates if AI features are enabled for the Hub.",
            "type": "boolean",
            "example": true
          },
          "is_collaboration_restricted_to_enterprise": {
            "description": "Indicates if collaboration is restricted to the enterprise.",
            "type": "boolean",
            "example": true
          },
          "can_non_owners_invite": {
            "description": "Indicates if non-owners can invite others to the Hub.",
            "type": "boolean",
            "example": true
          },
          "can_shared_link_be_created": {
            "description": "Indicates if a shared link can be created for the Hub.",
            "type": "boolean",
            "example": true
          }
        },
        "title": "Hub Update Request"
      },
      "Hubs": {
        "description": "A paginated list of hubs.",
        "type": "object",
        "allOf": [
          {
            "properties": {
              "entries": {
                "description": "A list of hubs.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Hub"
                }
              }
            }
          },
          {
            "type": "object",
            "description": "The part of an API response that describes marker\nbased pagination.",
            "properties": {
              "limit": {
                "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
                "type": "integer",
                "format": "int64",
                "example": 1000
              },
              "next_marker": {
                "description": "The marker for the start of the next page of results.",
                "type": "string",
                "example": "JV9IRGZmieiBasejOG9yDCRNgd2ymoZIbjsxbJMjIs3kioVii",
                "nullable": true
              }
            }
          }
        ],
        "title": "Hubs",
        "x-box-resource-id": "hubs_v2025.0",
        "x-box-tag": "hubs"
      },
      "ShieldList": {
        "description": "A standard representation of a Shield List.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the shield list.",
            "type": "string",
            "example": "90fb0e17-c332-40ed-b4f9-fa8908fbbb24"
          },
          "type": {
            "description": "Type of the object.",
            "type": "string",
            "example": "shield_list"
          },
          "name": {
            "description": "Name of the shield list.",
            "type": "string",
            "example": "Shield List Name"
          },
          "enterprise": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EnterpriseReference"
              },
              {
                "description": "Enterprise for which this list belongs to."
              }
            ]
          },
          "description": {
            "description": "Description of Shield List.",
            "type": "string",
            "example": "A list of things that are shielded"
          },
          "created_at": {
            "description": "ISO date time string when this shield list object was created.",
            "type": "string",
            "format": "date-time",
            "example": "2025-01-13T15:31:01.896Z"
          },
          "updated_at": {
            "description": "ISO date time string when this shield list object was updated.",
            "type": "string",
            "format": "date-time",
            "example": "2025-01-13T15:31:01.896Z"
          },
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShieldListContent"
              },
              {
                "description": "Specifies the type of elements in this Shield List and includes the elements themselves."
              }
            ]
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "content",
          "enterprise",
          "created_at",
          "updated_at"
        ],
        "title": "Shield List",
        "x-box-resource-id": "shield_list_v2025.0",
        "x-box-tag": "shield_lists"
      },
      "ShieldList--Mini": {
        "description": "A mini representation of a Shield List.",
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique global identifier for this list.",
            "type": "string",
            "example": "12345678-1234-1234-1234-123456789012"
          },
          "type": {
            "description": "The type of object.",
            "type": "string",
            "example": "shield_list",
            "enum": [
              "shield_list"
            ]
          },
          "name": {
            "description": "Name of Shield List.",
            "type": "string",
            "example": "My Shield List"
          },
          "content": {
            "properties": {
              "type": {
                "description": "The type of content in the shield list.",
                "type": "string",
                "example": "country_code"
              }
            },
            "type": "object"
          }
        },
        "required": [
          "id",
          "type",
          "name",
          "content"
        ],
        "title": "Shield List (Mini)",
        "x-box-resource-id": "shield_list_v2025.0--mini",
        "x-box-tag": "shield_lists"
      },
      "ShieldListContent": {
        "description": "Representation of content of a Shield List.",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ShieldListContentCountry"
          },
          {
            "$ref": "#/components/schemas/ShieldListContentDomain"
          },
          {
            "$ref": "#/components/schemas/ShieldListContentEmail"
          },
          {
            "$ref": "#/components/schemas/ShieldListContentIp"
          },
          {
            "$ref": "#/components/schemas/ShieldListContentIntegration"
          }
        ],
        "title": "Shield List Content"
      },
      "ShieldListContentCountry": {
        "description": "Representation of content of a Shield List that contains countries data.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of content in the shield list.",
            "type": "string",
            "example": "country",
            "enum": [
              "country"
            ]
          },
          "country_codes": {
            "description": "List of country codes values.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "US",
              "PL"
            ],
            "maximum": 1000,
            "minimum": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "type",
          "country_codes"
        ],
        "title": "Shield List Content (Country)",
        "x-box-resource-id": "shield_list_content__country_v2025.0",
        "x-box-tag": "shield_lists"
      },
      "ShieldListContentDomain": {
        "description": "Representation of content of a Shield List that contains domains data.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of content in the shield list.",
            "type": "string",
            "example": "domain",
            "enum": [
              "domain"
            ]
          },
          "domains": {
            "description": "List of domain.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "box.com",
              "example.com"
            ],
            "maximum": 100000,
            "minimum": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "type",
          "domains"
        ],
        "title": "Shield List Content (Domain)",
        "x-box-resource-id": "shield_list_content__domains_v2025.0",
        "x-box-tag": "shield_lists"
      },
      "ShieldListContentEmail": {
        "description": "Representation of content of a Shield List that contains email addresses data.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of content in the shield list.",
            "type": "string",
            "example": "email",
            "enum": [
              "email"
            ]
          },
          "email_addresses": {
            "description": "List of emails.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "example1@box.com",
              "example2@gmail.com"
            ],
            "maximum": 100000,
            "minimum": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "type",
          "email_addresses"
        ],
        "title": "Shield List Content (Email)",
        "x-box-resource-id": "shield_list_content__email_v2025.0",
        "x-box-tag": "shield_lists"
      },
      "ShieldListContentIntegration": {
        "description": "Representation of content of a Shield List that contains integrations data.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of content in the shield list.",
            "type": "string",
            "example": "integration",
            "enum": [
              "integration"
            ]
          },
          "integrations": {
            "description": "List of integration.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ID of the integration.",
                  "type": "string",
                  "example": "505e40b5-5d04-446a-9268-72a0ccc13669"
                }
              }
            },
            "minimum": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "type",
          "integrations"
        ],
        "title": "Shield List Content (Integration)",
        "x-box-resource-id": "shield_list_content__integration_v2025.0",
        "x-box-tag": "shield_lists"
      },
      "ShieldListContentIp": {
        "description": "Representation of content of a Shield List that contains ip addresses data.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The type of content in the shield list.",
            "type": "string",
            "example": "ip",
            "enum": [
              "ip"
            ]
          },
          "ip_addresses": {
            "description": "List of ips and cidrs.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "127.0.0.1",
              "80.12.12.12/24"
            ],
            "maximum": 100000,
            "minimum": 1,
            "uniqueItems": true
          }
        },
        "required": [
          "type",
          "ip_addresses"
        ],
        "title": "Shield List Content (IP)",
        "x-box-resource-id": "shield_list_content__ip_v2025.0",
        "x-box-tag": "shield_lists"
      },
      "ShieldListContentRequest": {
        "description": "Representation of content of a Shield List.",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/ShieldListContentCountry"
          },
          {
            "$ref": "#/components/schemas/ShieldListContentDomain"
          },
          {
            "$ref": "#/components/schemas/ShieldListContentEmail"
          },
          {
            "$ref": "#/components/schemas/ShieldListContentIp"
          }
        ],
        "title": "Shield List Content for requests"
      },
      "ShieldLists": {
        "description": "List of Shield List objects.",
        "type": "object",
        "allOf": [
          {
            "properties": {
              "entries": {
                "description": "A list of shield list objects.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ShieldList--Mini"
                }
              }
            }
          }
        ],
        "title": "List of Shield Lists",
        "x-box-resource-id": "shield_lists_v2025.0",
        "x-box-tag": "shield_lists"
      },
      "ShieldListsCreate": {
        "description": "The schema for Shield List create request.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the shield list.",
            "type": "string",
            "example": "My Shield List"
          },
          "description": {
            "description": "Optional description of Shield List.",
            "type": "string",
            "example": "A list of things that are shielded"
          },
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShieldListContentRequest"
              },
              {
                "description": "Specifies the type of elements in this Shield List and includes the elements themselves.\nIt is not possible to update Integration Shield Lists by Public API."
              }
            ]
          }
        },
        "required": [
          "name",
          "content"
        ],
        "title": "Create Shield List create request",
        "x-box-tag": "shield_lists"
      },
      "ShieldListsUpdate": {
        "description": "The schema for Shield List update request.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the shield list.",
            "type": "string",
            "example": "My Shield List"
          },
          "description": {
            "description": "Optional description of Shield List.",
            "type": "string",
            "example": "A list of things that are shielded"
          },
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ShieldListContentRequest"
              },
              {
                "description": "Specifies the type of elements in this Shield List and includes the elements themselves.\nIt is not possible to update Integration Shield Lists by Public API."
              }
            ]
          }
        },
        "required": [
          "name",
          "content"
        ],
        "title": "Create Shield List update request",
        "x-box-tag": "shield_lists"
      },
      "TermsOfService--Base": {
        "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for this terms of service.",
            "type": "string",
            "example": "11446498"
          },
          "type": {
            "description": "The value will always be `terms_of_service`.",
            "type": "string",
            "example": "terms_of_service",
            "enum": [
              "terms_of_service"
            ]
          }
        },
        "required": [
          "id",
          "type"
        ],
        "title": "Terms of service (Base)"
      },
      "User--Base": {
        "description": "A mini representation of a user, used when\nnested within another resource.",
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for this user.",
            "type": "string",
            "example": "11446498"
          },
          "type": {
            "description": "The value will always be `user`.",
            "type": "string",
            "example": "user",
            "enum": [
              "user"
            ],
            "nullable": false
          }
        },
        "required": [
          "type",
          "id"
        ],
        "title": "User (Base)"
      },
      "User--Mini": {
        "description": "A mini representation of a user, as can be returned when nested within other\nresources.",
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/User--Base"
          },
          {
            "properties": {
              "name": {
                "description": "The display name of this user.",
                "type": "string",
                "example": "Aaron Levie",
                "maxLength": 50
              },
              "login": {
                "description": "The primary email address of this user.",
                "type": "string",
                "format": "email",
                "example": "ceo@example.com"
              }
            }
          }
        ],
        "title": "User (Mini)"
      },
      "UserReference": {
        "description": "User reference.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The value is always `user`.",
            "type": "string",
            "example": "user",
            "enum": [
              "user"
            ]
          },
          "id": {
            "description": "The unique identifier for the user.",
            "type": "string",
            "example": "12345"
          }
        },
        "required": [
          "type",
          "id"
        ],
        "title": "User reference"
      },
      "WeblinkReference": {
        "description": "Weblink reference.",
        "type": "object",
        "properties": {
          "type": {
            "description": "The value will always be `weblink`.",
            "type": "string",
            "example": "weblink",
            "enum": [
              "weblink"
            ],
            "nullable": false
          },
          "id": {
            "description": "ID of the weblink.",
            "type": "string",
            "example": "42037322",
            "nullable": false
          }
        },
        "required": [
          "type",
          "id"
        ],
        "title": "Weblink reference"
      }
    },
    "securitySchemes": {
      "OAuth2Security": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
            "tokenUrl": "https://api.box.com/oauth2/token",
            "scopes": {
              "root_readonly": "Read all files and folders stored in Box",
              "root_readwrite": "Read and write all files and folders stored in Box",
              "manage_app_users": "Provision and manage app users",
              "manage_managed_users": "Provision and manage managed users",
              "manage_groups": "Manage an enterprise's groups",
              "manage_webhook": "Create webhooks programmatically through the API",
              "manage_enterprise_properties": "Manage enterprise properties",
              "manage_data_retention": "Manage data retention polices",
              "manage_legal_hold": "Manage Legal Holds"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "tags": [
    {
      "name": "Archives",
      "description": "A set of endpoints used to manage archives.",
      "x-box-tag": "archives"
    },
    {
      "name": "Box Doc Gen",
      "description": "Doc Gen is used to automatically generate documents.",
      "x-box-tag": "docgen"
    },
    {
      "name": "Box Doc Gen templates",
      "description": "Doc Gen templates are used as input to generate documents.",
      "x-box-tag": "docgen_template"
    },
    {
      "name": "External Users",
      "description": "External users are collaborators from outside of your enterprise.",
      "x-box-tag": "external_users"
    },
    {
      "name": "Hubs",
      "description": "A set of endpoints used to manage Hubs.",
      "x-box-tag": "hubs"
    },
    {
      "name": "Hub Collaborations",
      "description": "A set of endpoints used to manage collaborations within a Hub.",
      "x-box-tag": "hub_collaborations"
    },
    {
      "name": "Hub Items",
      "description": "A set of endpoints used to manage items within a Hub.",
      "x-box-tag": "hub_items"
    },
    {
      "name": "Shield lists",
      "description": "Shield List allow an administrator to create a list \nwhich will be shared between different\nShield Smart Access and Threat Prection rules.",
      "x-box-tag": "shield_lists"
    }
  ],
  "externalDocs": {
    "description": "Box Developer Documentation.",
    "url": "https://developer.box.com"
  }
}